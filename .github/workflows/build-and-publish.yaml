---
name: Build and Publish

on:

  workflow_dispatch:
    # Allows you to run this workflow manually from the Actions tab
    inputs:
      tag:
        description: 'Tag to attach to image'
        required: true

jobs:
  build-and-publish:
    name: Publish container image
    env:
      BRANCH_PREFIX: redhat- # IMPORTANT! this must match the .on.push.branches prefix!
      REGISTRY: quay.io/projectquay
      REPO_NAME: ${{ github.event.repository.name }}
      TAG_SUFFIX: -unstable
    runs-on: 'ubuntu-latest'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set version from branch name
        id: version-from-branch
        if: startsWith('env.BRANCH_PREFIX', env.GITHUB_REF)
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "::set-output name=version::${BRANCH_NAME/${{ env.BRANCH_PREFIX }}/}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build container for amd64
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          build-args: channel=stable
          push: false
          file: Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ github.event.inputs.tag }}-amd64
          provenance: false

      - name: Build and push s390x
        id: docker_build_s390x
        uses: docker/build-push-action@v3
        with:
          platforms: linux/s390x
          build-args: channel=stable
          push: false
          file: Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ github.event.inputs.tag }}-s390x
          provenance: false

      - name: Build and push ppc64le
        id: docker_build_ppc64le
        uses: docker/build-push-action@v3
        with:
          platforms: linux/ppc64le
          build-args: |
            channel=stable
            image=quay.io/centos/centos:stream8
          push: false
          file: Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ github.event.inputs.tag }}-ppc64le
          provenance: false

      - name: Build and push multi-arch manifest
        uses: Noelware/docker-manifest-action@master
        env:
          TAG: ${{ steps.version-from-branch.outputs.version }}${{ env.TAG_SUFFIX }}
        with:
          inputs: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ github.event.inputs.tag || env.TAG }}
          images: ${{ steps.docker_build.outputs.imageid}},${{ steps.docker_build_s390x.outputs.imageid }},${{ steps.docker_build_ppc64le.outputs.imageid }}
          push: false
          amend: true
